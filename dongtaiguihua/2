#include <iostream>  
#include <algorithm>  
using namespace std;  
  
int dp[4][4] = {0};     //全局数组，存放决策表  
  
int main(int argc,char** argv)  
{  
    int a[4][4] = {1,3,5,9,8,1,3,4,5,0,6,1,8,8,4,0};  //矩阵存储a[i][j]  
    for (int i = 0;i < 4;++i)  
    {  
        for (int j = 0;j < 4;++j)  
        {  
            if (i==0 && j==0)                         //边界条件问题需要考虑到  
            {  
                dp[i][j] = a[i][j];  
            }  
            else if (i==0 && j!=0)  
            {  
                dp[i][j] = a[i][j] + dp[i][j-1];  
            }  
            else if (i!=0 && j==0)  
            {  
                dp[i][j] = a[i][j] + dp[i-1][j];  
            }  
            else  
            {  
                dp[i][j] = a[i][j] + _cpp_min(dp[i-1][j],dp[i][j-1]);  
            }  
        }  
    }  
  
    cout<<"走到位置"<<"(4,4)"<<"最短路径为：";  
    cout<<dp[3][3]<<endl;           //好像到这里又脑残了一次，真输出dp[4][4]了~  
  
   // system("pause");  
    return 0;  
}  
